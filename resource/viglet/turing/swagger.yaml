swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "0.9"
  title: Viglet Turing REST API
# during dev, should point to your local machine
host: api.viglet.ai
# basePath prefixes all resource paths

# basePath: 
basePath: /turing

#
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  oauth:
    type: oauth2
    flow: implicit
    authorizationUrl: https://api.viglet.ai/turing/auth
    scopes:
      basic: |
       to read any and all data related to twitter
security:
  - oauth:
    - basic
################################################################################
#                                           Paths                              #
################################################################################
################################################################################
#                                         Entities                             #
################################################################################
paths:
  /entity:
    get:
      description: Returns the entities
      security:
       - oauth:
         - basic
      tags: 
        - Entities     
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Entities'
    post:
      description: Add an entity.
      security:
       - oauth:
         - basic
      parameters:
        - in: body
          name: body
          description: Entity object
          required: false
          schema:
            $ref: '#/definitions/EntityEdit'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'  
  /entity/{entityId}:
    get:
      description: Return an entity
      security:
       - oauth:
         - basic
      parameters:
        - name: entityId
          in: path
          description: The numerical ID of the desired entity
          required: true
          type: string
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'
         
    delete:
      description: Delete an entity
      security:
       - oauth:
         - basic
      parameters:
        - name: entityId
          in: path
          description: The numerical ID of the desired status
          required: true
          type: string
        - name: trim_user
          in: query
          description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
          required: false
          type: string
      tags: 
        - Entities          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'
    put:
      description: Update an entity.
      security:
       - oauth:
         - basic
      parameters:
        - in: body
          name: body
          description: Entity object
          required: false
          schema:
            $ref: '#/definitions/EntityEdit'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'           
            
  /entity/{entityId}/term:
    get:
      description: Returns entire terms per entity
      security:
       - oauth:
         - basic
      parameters:
        - name: entityId
          in: path
          description: The numerical ID of the desired NLP
          required: true
          type: string
      tags: 
        - Entities          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Terms'
    post:
      description: Add an term to specific entity.
      security:
       - oauth:
         - basic
      parameters:
        - in: body
          name: body
          description: Term object
          required: false
          schema:
            $ref: '#/definitions/TermEdit'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'              
  /entity/term/{termId}:
    get:
      description: Return a term
      security:
       - oauth:
         - basic
      parameters:
        - name: termId
          in: path
          description: The numerical ID of the desired term
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Term' 
    put:
      description: Update a term.
      security:
       - oauth:
         - basic
      parameters:
        - name: termId
          in: path
          description: The numerical ID of the desired term
          required: true
          type: string
        - in: body
          name: body
          description: Term object
          required: false
          schema:
            $ref: '#/definitions/TermEdit'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'                           
    delete:
      description: Delete a term
      security:
       - oauth:
         - basic
      parameters:
        - name: termId
          in: path
          description: The numerical ID of the desired term
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Term' 
  
  /entity/term/{termId}/variation:
    get:
      description: Return variations of term
      security:
       - oauth:
         - basic
      parameters:
        - name: termId
          in: path
          description: The numerical ID of the desired term
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            schema:
            type: array
            items:   
              $ref: '#/definitions/TermVariation'  
    post:
      description: Add a variation of term
      security:
       - oauth:
         - basic
      parameters:
        - in: body
          name: body
          description: Term Variation object
          required: false
          schema:
            $ref: '#/definitions/TermVariation'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'        
  /entity/term/variation/{variationId}:
    get:
      description: Return a variation of term
      security:
       - oauth:
         - basic
      parameters:
        - name: variationId
          in: path
          description: The numerical ID of the desired term variation
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            schema:
            type: array
            items:   
              $ref: '#/definitions/TermVariation'  
    put:
      description: Update a variation of term.
      security:
       - oauth:
         - basic
      parameters:
        - name: variationId
          in: path
          description: The numerical ID of the desired term variation
          required: true
          type: string
        - in: body
          name: body
          description: Term Variation object
          required: false
          schema:
            $ref: '#/definitions/TermVariation'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'                        
    delete:
      description: Delete a variation of term
      security:
       - oauth:
         - basic
      parameters:
        - name: variationId
          in: path
          description: The numerical ID of the desired term variation
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Term' 

  /entity/term/{termId}/relation:
    get:
      description: Return relations of term
      security:
       - oauth:
         - basic
      parameters:
        - name: termId
          in: path
          description: The numerical ID of the desired term
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            schema:
            type: array
            items:   
              $ref: '#/definitions/TermRelation'  
    post:
      description: Add a relation of term
      security:
       - oauth:
         - basic
      parameters:
        - in: body
          name: body
          description: Term Relation object
          required: false
          schema:
            $ref: '#/definitions/TermRelation'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'   
  /entity/term/relation/{relationId}:
    get:
      description: Return a relation of term
      security:
       - oauth:
         - basic
      parameters:
        - name: relationId
          in: path
          description: The numerical ID of the desired term relation
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            schema:
            type: array
            items:   
              $ref: '#/definitions/TermRelation'  
    put:
      description: Update a relation of term.
      security:
       - oauth:
         - basic
      parameters:
        - name: relationId
          in: path
          description: The numerical ID of the desired term variation
          required: true
          type: string
        - in: body
          name: body
          description: Term Relation object
          required: false
          schema:
            $ref: '#/definitions/TermRelation'
      tags: 
        - Entities  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'                     
    delete:
      description: Delete a relation of term
      security:
       - oauth:
         - basic
      parameters:
        - name: relationId
          in: path
          description: The numerical ID of the desired term relation
          required: true
          type: string
      tags: 
        - Entities            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Term'                                                       
################################################################################
#                                 Machine Learning                             #
################################################################################            
  /ml:
    get:
      description: Returns entire machine learning
      security:
       - oauth:
         - basic
      tags: 
        - Machine Learning  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MLs' 
         
  /ml/{mlId}:
    get:
      description: Returns an machine learning
      security:
       - oauth:
         - basic
      parameters:
        - name: mlId
          in: path
          description: The numerical ID of the desired ML
          required: true
          type: string  
      tags: 
        - Machine Learning            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ML'   
    delete:
      description: Delete an machine learning
      security:
       - oauth:
         - basic
      parameters:
        - name: mlId
          in: path
          description: The numerical ID of the desired ML
          required: true
          type: string   
      tags: 
        - Machine Learning            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ML'  
  
  /ml/type:
    get:
      description: Returns an entire machine learning types
      security:
       - oauth:
         - basic
      tags: 
        - Machine Learning           
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MLTypes'   

  /ml/type/{mlTypeId}:
    get:
      description: Returns a machine learning type
      security:
       - oauth:
         - basic
      parameters:
        - name: mlTypeId
          in: path
          description: The numerical ID of the desired ML
          required: true
          type: string         
      tags: 
        - Machine Learning  
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MLType'   
    delete:
      description: Delete an machine learning
      security:
       - oauth:
         - basic
      parameters:
        - name: mlTypeId
          in: path
          description: The numerical ID of the desired ML
          required: true
          type: string  
      tags: 
        - Machine Learning            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/MLType'                     
  /ml/data/{dataId}:
    get:
      description: Return a data set
      security:
       - oauth:
         - basic
      parameters:
        - name: dataId
          in: path
          description: The numerical ID of the desired dataset
          required: true
          type: string
      tags: 
        - Datasets    
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Data'
    delete:
      description: Delete a data set
      security:
       - oauth:
         - basic
      parameters:
        - name: dataId
          in: path
          description: The numerical ID of the desired data set
          required: true
          type: string
      tags: 
        - Datasets            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Data'            
    post:
      description: Update a data set
      security:
       - oauth:
         - basic
      parameters:
        - name: dataId
          in: path
          description: The numerical ID of the desired data set
          required: true
          type: string
      tags: 
        - Datasets            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Data'  
            
  /ml/data/group:
    get:
      description: Returns the data groups
      security:
       - oauth:
         - basic
      tags: 
        - Datasets           
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DataGroups'
            
  
  /ml/data/import:
    post:
      description: Import a data set
      security:
       - oauth:
         - basic
      parameters:
        - name: count
          in: query
          description: Specifies the number of tweets to try and retrieve
          required: false
          type: string
        - name: since_id
          in: query
          description: Returns result with an ID greater than the specified ID
          required: false
          type: string
        - name: max_id
          in: query
          description: Returns results with an ID less than or equal to the specified ID
          required: false
          type: string
        - name: trim_user
          in: query
          description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
          required: false
          type: string
        - name: contributor_details
          in: query
          description: This parameter enhances the contributors element of the status response
          required: false
          type: string
        - name: include_entities
          in: query
          description: The entities node will be disincluded when set to false
          required: false
          type: string
      tags: 
        - Datasets            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DataGroup'
            
  
  
  /ml/data/group/{dataGroupId}:
    get:
      description: Returns a specific data group
      security:
       - oauth:
         - basic
      parameters:
        - name: dataGroupId
          in: path
          description: The numerical ID of the desired data group.
          required: true
          type: string
      tags: 
        - Datasets            
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DataGroup'
            
  /ml/model:
    get:
      description: Returns all models.
      security:
       - oauth:
         - basic
      tags: 
        - Models         
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Models'

  /ml/model/{modelId}/evaluation:
    get:
      description: Test the model.
      security:
       - oauth:
         - basic
      parameters:
        - name: modelId
          in: path
          description: The numerical ID of the desired model
          required: true
          type: string
      tags: 
        - Models 
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Model'
            
  

  /ml/model/{modelId}/generate:
    get:
      description: Generate a model.
      security:
       - oauth:
         - basic
      parameters:
        - name: modelId
          in: path
          description: The numerical ID of the desired model
          required: true
          type: string
      tags: 
        - Models
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'

  /nlp/type:
    get:
      description: Returns a timeline of tweets authored by memebers of the specified list
      security:
       - oauth:
         - basic
      parameters:
        - name: list_id
          in: query
          description: The numerical id of the list
          required: true
          type: string
        - name: slug
          in: query
          description: You can identify a list by its slug instead of its numerical id
          required: true
          type: string
        - name: owner_screen_name
          in: query
          description: The screen name of the user who owns the list being requested by a slug
          required: false
          type: string
        - name: owner_id
          in: query
          description: The user ID of the user who owns the list being requested by a slug
          required: false
          type: string
        - name: since_id
          in: query
          description: Returns results with an ID greater than the sepcified ID
          required: false
          type: string
        - name: max_id
          in: query
          description: Returns results with an ID less than or equal to the specified ID
          required: false
          type: string
        - name: count
          in: query
          description: Specifies the number of results to retrieve per page
          required: false
          type: string
        - name: include_entities
          in: query
          description: Entities are ON by default
          required: false
          type: string
        - name: include_rts
          in: query
          description: When set to either true, t or 1, the list timeline will contain native retweets in addition to the standard stream of tweets
          required: false
          type: string
      tags: 
        - NLPs
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/NLPTypes'
            
  
  /nlp/type/{nlpTypeId}:
    post:
      description: Destroys the status specified by the required ID parameter
      security:
       - oauth:
         - basic
      parameters:
        - name: nlpTypeId
          in: path
          description: The numerical ID of the desired status
          required: true
          type: string
        - name: trim_user
          in: query
          description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
          required: false
          type: string
      tags: 
        - NLPs          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/NLPType'
            
  
            
  /nlp:
    get:
      description: Returns the list of memebers destroy
      security:
       - oauth:
         - basic
      parameters:
        - name: list_id
          in: query
          description: The numerical id of the list
          required: true
          type: string
        - name: slug
          in: query
          description: You can identify a list by its slug instrad of its numerical id
          required: true
          type: string
        - name: owner_screen_name
          in: query
          description: The screen name of the user who owns the list being requested by a slug
          required: false
          type: string
        - name: user_id
          in: query
          description: The id of the user for whom to remove from the list
          required: false
          type: string
        - name: screen_name
          in: query
          description: The screen name of the user for whom to remove from the list
          required: false
          type: string
        - name: owner_id
          in: query
          description: The is of the user who wons the list being requested by a slug
          required: false
          type: string
      tags: 
        - NLPs          
      responses:
        "200":
          description: Success
          
  /nlp/{nlpId}:
    post:
      description: Destroys the status specified by the required ID parameter
      security:
       - oauth:
         - basic
      parameters:
        - name: nlpId
          in: path
          description: The numerical ID of the desired status
          required: true
          type: string
        - name: trim_user
          in: query
          description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
          required: false
          type: string
      tags: 
        - NLPs          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/NLP'
            
  
            
  
  /se:
    get:
      description: Returns all search engines
      security:
       - oauth:
         - basic
      tags: 
        - Search Engines     
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SEs'
 
  /se/{seId}:
    post:
      description: Returns a specific search engine
      security:
       - oauth:
         - basic
      parameters:
        - name: seId
          in: path
          description: The numerical ID of the desired search engine
          required: true
          type: string
      tags: 
        - Search Engines          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SE'
                        
  /se/{seId}/select:
    get:
      description: Search into default search engine.
      security:
       - oauth:
         - basic
      parameters:
        - name: seId
          in: path
          description: The numerical ID of the desired search engine
          required: true
          type: string     
        - name: q
          in: query
          description: Term to search
          required: false
          type: string
        - name: p
          in: query
          description: Number of page
          required: false
          type: integer
        - name: fq[]
          in: query
          description: Filter Query, normaly is used to facets
          required: false
          type: string
        - name: _setlocale
          in: query
          description: Locale
          required: false
          type: string
        - name: sort
          in: query
          description: Search Sort
          required: false
          type: string
      tags: 
        - Search Engines             
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SESearch'
            
  /se/{seId}/update:
    get:
      description: Index content into specific search engine.
      security:
       - oauth:
         - basic
      parameters:
        - name: seId
          in: path
          description: The numerical ID of the desired search engine
          required: true
          type: string      
        - name: vigText
          in: query
          description: Text 
          required: true
          type: string
        - name: vigNLP
          in: query
          description: NLP Id
          required: true
          type: integer
        - name: vigSE
          in: query
          description: Search Engine Id
          required: true
          type: integer
      tags: 
        - Search Engines             
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SEUpdate'
  /sn/indexer:
    post:
      description: Simulate the OTSN Broker
      security:
       - oauth:
         - basic
      parameters:
        - name: data
          in: formData
          description: XML with atributes
          required: false
          type: string
        - name: index
          in: formData
          description: Name of core Index of Search Engine
          required: false
          type: string
        - name: config
          in: formData
          description: Config file name
          required: false
          type: string
      tags: 
        - Semantic Navigation
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/OTSNBroker'

  /sn/search:
    get:
      description: Returns JSON of Semantic Navigation.
      security:
       - oauth:
         - basic
      parameters:
        - name: q
          in: query
          description: Term to search
          required: false
          type: string
        - name: p
          in: query
          description: Number of page
          required: false
          type: integer
        - name: fq[]
          in: query
          description: Filter Query, normaly is used to facets
          required: false
          type: string
        - name: _setlocale
          in: query
          description: Locale
          required: false
          type: string
        - name: sort
          in: query
          description: Search Sort
          required: false
          type: string
      tags: 
        - Semantic Navigation          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/OTSNSearch'
              
            
  /otca/af:
    post:
      description: Imports the OTCA Autority File XML to Viglet Turing as Entity.
      security:
       - oauth:
         - basic
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json         
      parameters:
        - name: file
          in: formData
          description: OTCA AF XML file
          required: true
          type: file
      tags: 
        - Integrations          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'

  /otsn/broker:
    post:
      description: Simulate the OTSN Broker
      security:
       - oauth:
         - basic
      parameters:
        - name: data
          in: formData
          description: XML with atributes
          required: false
          type: string
        - name: index
          in: formData
          description: Name of core Index of Search Engine
          required: false
          type: string
        - name: config
          in: formData
          description: Config file name
          required: false
          type: string
      tags: 
        - Integrations          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/OTSNBroker'

  /otsn/search/theme/json:
    get:
      description: Returns JSON of Semantic Navigation.
      security:
       - oauth:
         - basic
      parameters:
        - name: q
          in: query
          description: Term to search
          required: false
          type: string
        - name: p
          in: query
          description: Number of page
          required: false
          type: integer
        - name: fq[]
          in: query
          description: Filter Query, normaly is used to facets
          required: false
          type: string
        - name: _setlocale
          in: query
          description: Locale
          required: false
          type: string
        - name: sort
          in: query
          description: Search Sort
          required: false
          type: string
      tags: 
        - Integrations          
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/OTSNSearch'
  

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Entities:
    type: array
    items:
      $ref: '#/definitions/Entity'

  Entity:
    type: object
    required:
      - name
      - description      
    properties:    
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      terms:
        type: array
        items:
          $ref: '#/definitions/Term'

  EntityEdit:
    type: object
    required:
      - name
      - description      
    properties:    
      name:
        type: string
      description:
        type: string
  Terms:
    type: array
    items:
      $ref: '#/definitions/Term'
  Term:
    type: object
    properties:
      id:
        type: integer
      id_custom:
        type: string        
      name:
        type: string 
      variations:
        type: array
        items:
          $ref: '#/definitions/TermVariation'
      relations:
        type: array
        items:
          $ref: '#/definitions/TermRelation'             
  TermEdit:
    type: object
    properties:
      id_custom:
        type: string             
      name:
        type: string
      enabled:
        type: boolean
      variations:
        type: array
        items:
          $ref: '#/definitions/TermVariation'
      relations:
        type: array
        items:
          $ref: '#/definitions/TermRelation'          
  TermVariation:
    type: object
    properties:
      name: 
        type: string
      weight: 
        type: integer
      case: 
        type: string
      accent: 
        type: string
      language: 
        type: string
  TermRelation:
    type: object
    properties:
      term_id:
        type: string
      type: 
        type: string
  MLs:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/ML'
  ML:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string     
  MLTypes:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/MLType'
  MLType:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string    
  Data:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string    
  DataGroups:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/DataGroup'
  DataGroup:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string         
  Models:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/Model'
  Model:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string          
  NLPTypes:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/NLPType'
  NLPType:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string      
  NLPs:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/NLP'
  NLP:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string       
  SEs:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/SE'
  SE:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string    
  SESearch:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string             
  SEUpdate:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string             
  OTSNBroker:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string    
  OTSNSearch:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string              